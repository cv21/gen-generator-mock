// File generated by gen. DO NOT EDIT.
// Generator plugin github.com/cv21/gen-generator-mock v1.0.0.
package generated

import (
	"io"

	stringsvc "github.com/cv21/gen/examples/stringsvc"
	decimal "github.com/shopspring/decimal"
	mock "github.com/stretchr/testify/mock"
)

// MockBlaBlaStringService is an autogenerated mock type for the StringService interface.
type MockBlaBlaStringService struct {
	mock.Mock
}

// Concat provides a mock function for method Concat of interface StringService.
func (_m *MockBlaBlaStringService) Concat(a string, b *string) (*string, *string) {
	ret := _m.Called(a, b)

	var r0 *string
	if rf, ok := ret.Get(0).(func(string, *string) *string); ok {
		r0 = rf(a, b)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	var r1 *string
	if rf, ok := ret.Get(1).(func(string, *string) *string); ok {
		r1 = rf(a, b)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*string)
		}
	}

	return r0, r1
}

// Plus provides a mock function for method Plus of interface StringService.
func (_m *MockBlaBlaStringService) Plus(a decimal.Decimal, b *decimal.Decimal) decimal.Decimal {
	ret := _m.Called(a, b)

	var r0 decimal.Decimal
	if rf, ok := ret.Get(0).(func(decimal.Decimal, *decimal.Decimal) decimal.Decimal); ok {
		r0 = rf(a, b)
	} else {
		r0 = ret.Get(0).(decimal.Decimal)
	}

	return r0
}

// Prefix provides a mock function for method Prefix of interface StringService.
func (_m *MockBlaBlaStringService) Prefix(x stringsvc.ListOfStrings) *stringsvc.ListOfStrings {
	ret := _m.Called(x)

	var r0 *stringsvc.ListOfStrings
	if rf, ok := ret.Get(0).(func(stringsvc.ListOfStrings) *stringsvc.ListOfStrings); ok {
		r0 = rf(x)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stringsvc.ListOfStrings)
		}
	}

	return r0
}

// Yay provides a mock function for method Yay of interface StringService.
func (_m *MockBlaBlaStringService) Yay() io.Reader {
	ret := _m.Called()

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func() io.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	return r0
}
